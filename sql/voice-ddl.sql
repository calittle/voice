/* 	
	AUTHOR: 		Charles Little (little_charles1@columbusstate.edu)
	CREATION DATE:	22-June-2017
	FILENAME:		VOICE-ddl.sql
	PURPOSE:		Schema Creation (DDL)
*/
-- Run this script as privileged user.
DROP DATABASE IF EXISTS VOICE;
CREATE database VOICE CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE VOICE;

SET autocommit=0;
START TRANSACTION;

-- VOICEsys user should be used by applications wanting to manage the database structures.
DROP USER IF EXISTS 'VOICEsys'@'%';
CREATE USER 'VOICEsys'@'%' IDENTIFIED BY '1385362127Maya@123@';
GRANT ALL ON VOICE.* TO 'VOICEsys'@'%';

-- VOICEADMIN user should be used to execute ALL procedures in administrative capacity.
DROP USER IF EXISTS 'VOICEadmin'@'%';
CREATE USER 'VOICEadmin'@'%' IDENTIFIED BY '1385362127Maya@123@';
GRANT EXECUTE  
	ON VOICE.*
    TO 'VOICEadmin'@'%';

-- VOICE user should be used to execute user-based procedures only.
DROP USER IF EXISTS 'VOICE'@'%';
CREATE USER 'VOICE'@'%' IDENTIFIED BY '1385362127Maya@123@';
-- TODO define specific procedures. NEEDS REFINEMENT
GRANT EXECUTE  
	ON VOICE.*
    TO 'VOICE'@'%';

COMMIT;
START TRANSACTION;
CREATE TABLE ABILITIES (
                ABILITY_ID BIGINT AUTO_INCREMENT NOT NULL,
                ABILITY_NAME VARCHAR(256) NOT NULL,
                ABILITY_DESCRIPTION LONGBLOB NOT NULL,
                PRIMARY KEY (ABILITY_ID)
);


CREATE TABLE ABILITY_SETS (
                ABILITY_SET_ID BIGINT AUTO_INCREMENT NOT NULL,
                ABILITY_SET_NAME VARCHAR(64) NOT NULL,
                PRIMARY KEY (ABILITY_SET_ID)
);


CREATE TABLE ABILITY_SET_ABILITIES (
                ABILITY_SET_ID BIGINT NOT NULL,
                ABILITY_ID BIGINT NOT NULL,
                ENABLED BOOLEAN DEFAULT false NOT NULL,
                AVAILABLE BOOLEAN DEFAULT false NOT NULL,
                VISIBLE BOOLEAN DEFAULT false NOT NULL,
                PRIMARY KEY (ABILITY_SET_ID, ABILITY_ID)
);


CREATE TABLE USERS (
                USER_ID BIGINT AUTO_INCREMENT NOT NULL,
                USER_NAME VARCHAR(256) NOT NULL,
                PWD_HASH VARCHAR(256) NOT NULL,
                HASH_ALGORITHM VARCHAR(50) NOT NULL,
                SALT VARCHAR(50),
                EMAIL VARCHAR(256) NOT NULL,
                PRIMARY KEY (USER_ID)
);

ALTER TABLE USERS MODIFY COLUMN PWD_HASH VARCHAR(256) COMMENT 'Hashed password and salt';

ALTER TABLE USERS MODIFY COLUMN SALT VARCHAR(50) COMMENT 'Password salt';

ALTER TABLE USERS MODIFY COLUMN HASH_ALGORITHM VARCHAR(50) COMMENT 'Algorithm used to hash the password and salt';

CREATE UNIQUE INDEX username_idx
 ON USERS
 ( USER_NAME );

CREATE TABLE ROLES (
                ROLE_ID BIGINT AUTO_INCREMENT NOT NULL,
                ROLE_DESCRIPTION VARCHAR(64) NOT NULL,
                PARENT_ID BIGINT,
                PRIMARY KEY (ROLE_ID)
);


CREATE TABLE ABILITY_SET_ROLES (
                ROLE_ID BIGINT NOT NULL,
                ABILITY_SET_ID BIGINT NOT NULL,
                PRIMARY KEY (ROLE_ID, ABILITY_SET_ID)
);


CREATE TABLE USER_ROLES (
                USER_ID BIGINT NOT NULL,
                ROLE_ID BIGINT NOT NULL,
                PRIMARY KEY (USER_ID, ROLE_ID)
);


CREATE TABLE AUDIT (
                AUDIT_ID BIGINT AUTO_INCREMENT NOT NULL,
                TIMESTAMP DATETIME NOT NULL,
                ACTIVITY LONGBLOB NOT NULL,
                USER_ID BIGINT NOT NULL,
                PRIMARY KEY (AUDIT_ID)
);


CREATE TABLE DISTRICTS (
                DISTRICT_ID BIGINT AUTO_INCREMENT NOT NULL,
                DISTRICT VARCHAR(128) NOT NULL,
                PRIMARY KEY (DISTRICT_ID)
);


CREATE TABLE ELECTIONS (
                ELECTION_ID BIGINT AUTO_INCREMENT NOT NULL,
                ELECTION_NAME VARCHAR(256) NOT NULL,
                ELECTION_DETAIL LONGBLOB NOT NULL,
                DATE_START DATETIME NOT NULL,
                DATE_END DATETIME NOT NULL,
                PRIMARY KEY (ELECTION_ID)
);


CREATE TABLE ELECTION_DISTRICTS (
                ELECTION_ID BIGINT NOT NULL,
                DISTRICT_ID BIGINT NOT NULL,
                PRIMARY KEY (ELECTION_ID, DISTRICT_ID)
);


CREATE TABLE MEASURES (
                MEASURE_ID BIGINT AUTO_INCREMENT NOT NULL,
                ELECTION_ID BIGINT NOT NULL,
                MEASURE_DETAIL LONGBLOB NOT NULL,
                PRIMARY KEY (MEASURE_ID, ELECTION_ID)
);


CREATE TABLE OPTIONS (
                OPTION_ID BIGINT AUTO_INCREMENT NOT NULL,
                MEASURE_ID BIGINT NOT NULL,
                ELECTION_ID BIGINT NOT NULL,
                OPTION_DETAIL LONGBLOB NOT NULL,
                PRIMARY KEY (OPTION_ID, MEASURE_ID, ELECTION_ID)
);


CREATE TABLE BALLOTS (
	BALLOT_ID BIGINT AUTO_INCREMENT NOT NULL,
    REGISTRANT_ID BIGINT NOT NULL,
	ELECTION_ID BIGINT NOT NULL,
	MEASURE_ID BIGINT NOT NULL,
	OPTION_ID BIGINT NOT NULL,
	CREATED TIMESTAMP DEFAULT NOW(),                
    MODIFIED TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,	
    PROVISIONAL TINYINT(1) DEFAULT 0,
    IS_COUNTED TINYINT(1) DEFAULT 0,
    COUNTTIME TIMESTAMP NULL,
    SIGNATURE LONGBLOB NULL,    
	PRIMARY KEY (BALLOT_ID, REGISTRANT_ID, ELECTION_ID, MEASURE_ID, OPTION_ID)
);


CREATE TABLE GENDERS (
                GENDERCD VARCHAR(16) NOT NULL,
                GENDER VARCHAR(16) NOT NULL,
                PRIMARY KEY (GENDERCD)
);


CREATE TABLE PARTIES (
                PARTYCD VARCHAR(16) NOT NULL,
                Party VARCHAR(64) NOT NULL,
                PRIMARY KEY (PARTYCD)
);


CREATE TABLE ETHNICITIES (
                ETHNICITYCD CHAR(2) NOT NULL,
                ETHNICITY VARCHAR(15) NOT NULL,
                PRIMARY KEY (ETHNICITYCD)
);


CREATE TABLE AFFIRMATIONS (
                AFFIRM_ID BIGINT AUTO_INCREMENT NOT NULL,
                STATECD VARCHAR(3) NOT NULL,
                AFFIRMATION LONGBLOB NOT NULL,
                PRIMARY KEY (AFFIRM_ID)
);


CREATE TABLE COUNTRIES (
                COUNTRYCD VARCHAR(3) NOT NULL,
                COUNTRY VARCHAR(64) NOT NULL,
                PRIMARY KEY (COUNTRYCD)
);


CREATE TABLE STATES (
                STATECD VARCHAR(3) NOT NULL,
                COUNTRYCD VARCHAR(3) NOT NULL,
                STATE VARCHAR(64) NOT NULL,
                PRIMARY KEY (STATECD, COUNTRYCD)
);


CREATE TABLE COUNTIES (
                COUNTYCD VARCHAR(64) NOT NULL,
                STATECD VARCHAR(3) NOT NULL,
                COUNTY VARCHAR(64),
                PRIMARY KEY (COUNTYCD, STATECD)
);


CREATE TABLE STATE_PARTIES (
                STATECD VARCHAR(3) NOT NULL,
                PARTYCD VARCHAR(16) NOT NULL,
                PRIMARY KEY (STATECD, PARTYCD)
);

CREATE TABLE LOCATIONS (
                LOCATION_ID BIGINT AUTO_INCREMENT NOT NULL,
                STREET_NAME1 VARCHAR(256) NOT NULL,
                STREET_NAME2 VARCHAR(256),
                CITY VARCHAR(256) NOT NULL,
                POSTALCODE VARCHAR(256) NOT NULL,
                COUNTRYCD VARCHAR(3) NOT NULL,
                COUNTYCD VARCHAR(64) NOT NULL,
                STATECD VARCHAR(3) NOT NULL,
                PRIMARY KEY (LOCATION_ID)
);
/*
NOTE: Have noticed that sometimes the AUTO_INCREMENT parameter doesn't "stick" on initial table creation.
	  will try altering table after creating and prior to creation of foreign key. If you try to add a location
      and receive "ERROR Code 1364. Field 'LOCATION_ID' doesn't have a default value", run the following:
      
      ALTER TABLE `VOICE`.`REG_LOC` DROP FOREIGN KEY `registrants_reg_loc_fk`;
	  ALTER TABLE `VOICE`.`REG_LOC` DROP INDEX `registrants_reg_loc_fk` ;
      ALTER TABLE `LOCATIONS` CHANGE `LOCATION_ID` `LOCATION_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT 'Primary key.';
      ALTER TABLE REG_LOC ADD CONSTRAINT locations_reg_loc_fk FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS (LOCATION_ID) ON DELETE NO ACTION ON UPDATE NO ACTION; 

*/
ALTER TABLE `LOCATIONS` CHANGE `LOCATION_ID` `LOCATION_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT 'Primary key.';

CREATE TABLE REGISTRANTS (
                REGISTRANT_ID BIGINT AUTO_INCREMENT NOT NULL,
                F_NAME VARCHAR(256) NOT NULL,
                M_NAME VARCHAR(256) NOT NULL DEFAULT '',
                L_NAME VARCHAR(256) NOT NULL,
                Suffix VARCHAR(256) NOT NULL DEFAULT '',
                DOB DATE NOT NULL,
                Phone VARCHAR(64) NULL,
                STATEID VARCHAR(256) NULL,
                FEDERAL_ID VARCHAR(32) NULL,
                GENDERCD VARCHAR(16) NULL,
                ETHNICITYCD CHAR(2) NULL,
				PARTYCD VARCHAR(16) NOT NULL DEFAULT 'UNS',
                STATECD VARCHAR(3) NOT NULL,
                APPROVAL_STATE TINYINT(1) DEFAULT '0' NOT NULL,
                AFFIRM_STATE TINYINT(1) DEFAULT '0' NOT NULL,
				CREATED TIMESTAMP NOT NULL DEFAULT NOW(),
                AFFIRMED TIMESTAMP NULL DEFAULT NULL,
                APPROVALSTATECHANGED TIMESTAMP NULL DEFAULT NULL,
				MODIFIED TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,	
                USER_ID BIGINT NOT NULL,
                PRIMARY KEY (REGISTRANT_ID)
);

ALTER TABLE REGISTRANTS COMMENT 'This table contains voter registrant information.';
ALTER TABLE REGISTRANTS MODIFY COLUMN APPROVAL_STATE TINYINT(1) COMMENT '0:not approved,1:approved,2:rejected';
ALTER TABLE REGISTRANTS MODIFY COLUMN AFFIRM_STATE TINYINT(1) COMMENT '0:not affirmed,1:affirmed';
ALTER TABLE REGISTRANTS MODIFY COLUMN FEDERAL_ID VARCHAR(32) COMMENT '123-45-6789';

CREATE TABLE REGISTRANT_DISTRICTS (
                REGISTRANT_ID BIGINT NOT NULL,
                DISTRICT_ID BIGINT NOT NULL,
                CREATED	TIMESTAMP DEFAULT NOW(),
                MODIFIED TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,	
                ACTIVE TINYINT(1) DEFAULT 1,
                PRIMARY KEY (REGISTRANT_ID, DISTRICT_ID)
);

CREATE TABLE REG_LOC (
                LOCATION_ID BIGINT NOT NULL,
                REGISTRANT_ID BIGINT NOT NULL,
                IS_MAILING BOOLEAN DEFAULT 0 NOT NULL,
                IS_RESIDENCE BOOLEAN DEFAULT 0 NOT NULL,
                PRIMARY KEY (LOCATION_ID, REGISTRANT_ID)
);
COMMIT;

START TRANSACTION;
ALTER TABLE ABILITY_SET_ABILITIES ADD CONSTRAINT abilities_ability_set_abilities_fk
FOREIGN KEY (ABILITY_ID)
REFERENCES ABILITIES (ABILITY_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE ABILITY_SET_ABILITIES ADD CONSTRAINT ABILITY_sets_ability_set_abilities_fk
FOREIGN KEY (ABILITY_SET_ID)
REFERENCES ABILITY_SETS (ABILITY_SET_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE ABILITY_SET_ROLES ADD CONSTRAINT ABILITY_sets_ability_set_roles_fk
FOREIGN KEY (ABILITY_SET_ID)
REFERENCES ABILITY_SETS (ABILITY_SET_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE USER_ROLES ADD CONSTRAINT users_user_roles_fk
FOREIGN KEY (USER_ID)
REFERENCES USERS (USER_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE AUDIT ADD CONSTRAINT users_audit_fk
FOREIGN KEY (USER_ID)
REFERENCES USERS (USER_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE REGISTRANTS ADD CONSTRAINT users_registrants_fk
FOREIGN KEY (USER_ID)
REFERENCES USERS (USER_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE USER_ROLES ADD CONSTRAINT roles_user_roles_fk
FOREIGN KEY (ROLE_ID)
REFERENCES ROLES (ROLE_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE ABILITY_SET_ROLES ADD CONSTRAINT roles_ability_set_roles_fk
FOREIGN KEY (ROLE_ID)
REFERENCES ROLES (ROLE_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE REGISTRANT_DISTRICTS ADD CONSTRAINT districts_registrant_districts_fk
FOREIGN KEY (DISTRICT_ID)
REFERENCES DISTRICTS (DISTRICT_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE ELECTION_DISTRICTS ADD CONSTRAINT districts_election_districts_fk
FOREIGN KEY (DISTRICT_ID)
REFERENCES DISTRICTS (DISTRICT_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE MEASURES ADD CONSTRAINT elections_measures_fk
FOREIGN KEY (ELECTION_ID)
REFERENCES ELECTIONS (ELECTION_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE ELECTION_DISTRICTS ADD CONSTRAINT elections_election_districts_fk
FOREIGN KEY (ELECTION_ID)
REFERENCES ELECTIONS (ELECTION_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE BALLOTS ADD CONSTRAINT elections_ballot_fk
FOREIGN KEY (ELECTION_ID)
REFERENCES ELECTIONS (ELECTION_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE BALLOTS ADD CONSTRAINT registrant_ballot_fk
FOREIGN KEY (REGISTRANT_ID)
REFERENCES REGISTRANTS (REGISTRANT_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE OPTIONS ADD CONSTRAINT measures_options_fk
FOREIGN KEY (MEASURE_ID, ELECTION_ID)
REFERENCES MEASURES (MEASURE_ID, ELECTION_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE BALLOTS ADD CONSTRAINT measures_ballot_fk
FOREIGN KEY (MEASURE_ID, ELECTION_ID)
REFERENCES MEASURES (MEASURE_ID, ELECTION_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;


ALTER TABLE BALLOTS ADD CONSTRAINT options_ballot_fk
FOREIGN KEY (OPTION_ID, MEASURE_ID, ELECTION_ID)
REFERENCES OPTIONS (OPTION_ID, MEASURE_ID, ELECTION_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE REGISTRANTS ADD CONSTRAINT genders_registrants_fk
FOREIGN KEY (GENDERCD)
REFERENCES GENDERS (GENDERCD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE STATE_PARTIES ADD CONSTRAINT parties_state_parties_fk
FOREIGN KEY (PARTYCD)
REFERENCES PARTIES (PARTYCD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE REGISTRANTS ADD CONSTRAINT ethnicities_registrants_fk
FOREIGN KEY (ETHNICITYCD)
REFERENCES ETHNICITIES (ETHNICITYCD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE AFFIRMATIONS ADD CONSTRAINT affirmations_state_fk
FOREIGN KEY (STATECD)
REFERENCES STATES (STATECD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE LOCATIONS ADD CONSTRAINT countries_locations_fk
FOREIGN KEY (COUNTRYCD)
REFERENCES COUNTRIES (COUNTRYCD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE STATES ADD CONSTRAINT countries_states_fk
FOREIGN KEY (COUNTRYCD)
REFERENCES COUNTRIES (COUNTRYCD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE LOCATIONS ADD CONSTRAINT states_locations_fk
FOREIGN KEY (STATECD)
REFERENCES STATES (STATECD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE STATE_PARTIES ADD CONSTRAINT states_state_parties_fk
FOREIGN KEY (STATECD)
REFERENCES STATES (STATECD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE COUNTIES ADD CONSTRAINT states_counties_fk
FOREIGN KEY (STATECD)
REFERENCES STATES (STATECD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE LOCATIONS ADD CONSTRAINT counties_locations_fk
FOREIGN KEY (COUNTYCD)
REFERENCES COUNTIES (COUNTYCD)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE REG_LOC ADD CONSTRAINT locations_reg_loc_fk
FOREIGN KEY (LOCATION_ID)
REFERENCES LOCATIONS (LOCATION_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE REG_LOC ADD CONSTRAINT registrants_reg_loc_fk
FOREIGN KEY (REGISTRANT_ID)
REFERENCES REGISTRANTS (REGISTRANT_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE REGISTRANT_DISTRICTS ADD CONSTRAINT registrants_registrant_districts_fk
FOREIGN KEY (REGISTRANT_ID)
REFERENCES REGISTRANTS (REGISTRANT_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE `VOICE`.`REGISTRANTS` 
ADD INDEX `reg_party_state_fk_idx` (`PARTYCD` ASC, `STATECD` ASC);
ALTER TABLE `VOICE`.`REGISTRANTS` 
ADD CONSTRAINT `reg_party_state_fk`
  FOREIGN KEY (`PARTYCD` , `STATECD`)
  REFERENCES `VOICE`.`STATE_PARTIES` (`PARTYCD` , `STATECD`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

COMMIT;
